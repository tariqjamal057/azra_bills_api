[tool.poetry]
name = "azra_bills_api"
version = "1.0.0"
description = "A SaaS-based laundry management system for single and multi-store setups. Enables bill generation, updates, customer assignment, and cash logging. Customers can view and pay bills via UPI, wallets, or cards and receive status reminders. Features dashboards, transaction reports, and high-value alerts for streamlined, secure operations."
authors = ["Tariq Jamal A <tariqjamal4267324@gmail.com>"]
license = "LICENSE"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.7"
fastapi = {extras = ["standard"], version = "^0.115.4"}
pydantic = "^2.9.2"
alembic = "^1.13.3"
sqlalchemy = "^2.0.36"
celery = "^5.4.0"
asgiref = "^3.8.1"
bcrypt = "^4.2.0"
psycopg-binary = "^3.2.3"
pydantic-settings = "^2.6.1"
psycopg = "^3.2.3"
sqlalchemy-easy-softdelete = "^0.8.3"
fastapi-pagination = "^0.12.32"
aiofiles = "^24.1.0"
passlib = "^1.7.4"
redis = "^5.2.0"
eventlet = "^0.38.0"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
isort = "^5.13.2"
docformatter = "^1.7.5"
djlint = "^1.35.4"
pre-commit = "^4.0.1"
ruff = "^0.7.2"
faker = "^33.0.0"
pytest-asyncio = "^0.24.0"
watchdog = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 99

[tool.isort]
profile = "black"

[tool.docformatter]
recursive = true
wrap-summaries = 99
wrap-descriptions = 99

[tool.djlint]
blank_line_after_tag="load,extends,include,block,endblock"
blank_line_before_tag="load,extends,include,block,endblock"
close_void_tags=true
exclude=".venv,venv,env"
format_attribute_template_tags=true
format_css=true
format_js=true
indent_size=4
max_line_length=120

[tool.ruff]
# Exclude files and directories added in below list
exclude = [
    "migrations",
    ".git",
    ".venv",
    ".vscode",
    ".ruff_cach",
    "venv",
    "__pycache__"
]

# Same as Black.
line-length = 99

[tool.ruff.lint]
select = ["E", "F", "W", "Q", "UP", "I", "N"]
preview = true
