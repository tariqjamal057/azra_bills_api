"""Add admin models.

Revision ID: ba0f3a914727
Revises:
Create Date: 2024-11-12 06:37:23.408490+00:00
"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ba0f3a914727"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "countries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("numeric_code", sa.String(length=3), nullable=False),
        sa.Column("phone_code", sa.String(length=10), nullable=False),
        sa.Column("capital", sa.String(length=100), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("currency_name", sa.String(length=50), nullable=False),
        sa.Column("currency_symbol", sa.String(length=5), nullable=False),
        sa.Column("region", sa.String(length=50), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column("subregion", sa.String(length=50), nullable=False),
        sa.Column("subregion_id", sa.Integer(), nullable=False),
        sa.Column("nationality", sa.String(length=50), nullable=False),
        sa.Column("is_operational", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_countries")),
    )
    op.create_table(
        "saas_admins",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("phone_number", sa.String(length=10), nullable=False),
        sa.Column("password", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_saas_admins")),
    )
    op.create_table(
        "states",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("state_code", sa.String(length=10), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["country_id"], ["countries.id"], name=op.f("fk_states_country_id_countries")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_states")),
    )
    op.create_table(
        "cities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["state_id"], ["states.id"], name=op.f("fk_cities_state_id_states")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cities")),
    )
    op.create_table(
        "stores",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("parent_store_id", sa.String(), nullable=True),
        sa.Column("created_by_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("slogan", sa.String(length=100), nullable=True),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("postal_code", sa.String(length=10), nullable=False),
        sa.Column("unique_indentifier", sa.String(), nullable=True),
        sa.Column("is_main_store", sa.Boolean(), nullable=False),
        sa.Column("gst", sa.String(length=20), nullable=True),
        sa.Column("tin", sa.String(length=20), nullable=True),
        sa.Column("services", sa.ARRAY(sa.Integer()), nullable=False),
        sa.Column("sub_services", sa.ARRAY(sa.Integer()), nullable=False),
        sa.Column("has_online_booking", sa.Boolean(), nullable=True),
        sa.Column("has_delivery_service", sa.Boolean(), nullable=True),
        sa.Column("has_parking_facility", sa.Boolean(), nullable=True),
        sa.Column("has_wifi_facility", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["city_id"], ["cities.id"], name=op.f("fk_stores_city_id_cities")),
        sa.ForeignKeyConstraint(
            ["country_id"], ["countries.id"], name=op.f("fk_stores_country_id_countries")
        ),
        sa.ForeignKeyConstraint(
            ["created_by_id"], ["saas_admins.id"], name=op.f("fk_stores_created_by_id_saas_admins")
        ),
        sa.ForeignKeyConstraint(
            ["parent_store_id"], ["stores.id"], name=op.f("fk_stores_parent_store_id_stores")
        ),
        sa.ForeignKeyConstraint(
            ["state_id"], ["states.id"], name=op.f("fk_stores_state_id_states")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_stores")),
        sa.UniqueConstraint("unique_indentifier", name=op.f("uq_stores_unique_indentifier")),
    )
    op.create_table(
        "holidays",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("store_id", sa.String(), nullable=False),
        sa.Column("created_by_id", sa.Integer(), nullable=True),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("type", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(length=255), nullable=False),
        sa.Column("from_time", sa.Time(), nullable=True),
        sa.Column("to_time", sa.Time(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["store_id"], ["stores.id"], name=op.f("fk_holidays_store_id_stores")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_holidays")),
    )
    op.create_table(
        "store_contact_details",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("store_id", sa.String(), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("is_email_verified", sa.Boolean(), nullable=False),
        sa.Column("phone_country_code", sa.String(length=5), nullable=False),
        sa.Column("phone_number", sa.String(length=15), nullable=False),
        sa.Column("is_phone_number_verified", sa.Boolean(), nullable=False),
        sa.Column("alternate_email", sa.String(length=100), nullable=True),
        sa.Column("is_alternate_email_verified", sa.Boolean(), nullable=False),
        sa.Column("alternate_phone_country_code", sa.String(length=5), nullable=True),
        sa.Column("alternate_phone_number", sa.String(length=15), nullable=True),
        sa.Column("is_alternate_phone_number_verified", sa.Boolean(), nullable=False),
        sa.Column("social_urls", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["store_id"], ["stores.id"], name=op.f("fk_store_contact_details_store_id_stores")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_store_contact_details")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("store_contact_details")
    op.drop_table("holidays")
    op.drop_table("stores")
    op.drop_table("cities")
    op.drop_table("states")
    op.drop_table("saas_admins")
    op.drop_table("countries")
    # ### end Alembic commands ###
